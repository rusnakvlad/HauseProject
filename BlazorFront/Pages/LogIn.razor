@page "/LogIn"
@using BuisnesLogicLayer.DTO
@using BlazorFront.Services
@using BlazorFront.AuthServices
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserServices userServices
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="container mt-5 mb-5">
    <div class="row d-flex align-items-center justify-content-center">
        <div class="col-md-6">
            <div class="card px-5 py-5">
                <div class="d-flex justify-content-center" style="color:red;font-size:14pt;text-align:center;">
                    <div>@invalidDataMessage</div>
                </div>
                <h5 class="mt-3">Вхід</h5> <small class="mt-2 text-muted"></small>
                <div class="form-input">
                    <i class="fa fa-envelope"></i>
                    <input @bind="@user.Email" type="text" class="form-control" placeholder="Почта">
                </div>
                <div class="form-input">
                    <i class="fa fa-lock"></i>
                    <input @bind="@user.Password" type="text" class="form-control" placeholder="Пароль">
                </div>
                <button @onclick="LogInUser" class="btn btn-primary mt-4 signup">Ввійти</button>
            </div>
        </div>
    </div>
</div>

@code {
    UserLogInDTO user = new UserLogInDTO();
    UserProfileDTO userProfile = new UserProfileDTO();

    string invalidDataMessage = "";
    public async Task LogInUser()
    {
        UserTokenDTO token = await userServices.LogIn(user);

        if (token.AccessToken != null && token.RefreshToken != null)
        {
            await ((CustomAuthStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(token);
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            invalidDataMessage = "Неправильна Почта обо Пароль";
        }
    }
}
